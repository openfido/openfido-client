version: 2.1
orbs:
  node: circleci/node@2.1.1
  aws-cli: circleci/aws-cli@1.3.1
jobs:
  build:
    docker:
      - image: cimg/node:16.11.1
    steps:
      - checkout
      # - node/install:
      #     node-version: 16.13.1
      # look for existing cache and restore if found
      - restore_cache:
          key: v1-deps-{{ checksum "package-lock.json" }}

      - run:
          name: Install Dependencies
          command: npm install
      # save any changes to the cache
      - save_cache:
          key: v1-deps-{{ checksum "package-lock.json" }}
          paths: 
            - node_modules  
      - run:
          name: Build
          command: |
            npm run build
      - run:
          name: Move Build to tmb
          command: |
            mkdir -p /tmp/workspace/build
            mv -v build/* /tmp/workspace/build
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - build

  deploy:
    docker:
      - image: cimg/base:stable
    parameters:
      access-key:
        type: env_var_name
        default: STAGE_ACCESS_KEY_ID
      secret-key:
        type: env_var_name
        default: STAGE_SECRET_ACCESS_KEY
      s3-bucket:
        type: string
        default: $STAGE_S3_URL
      cf-id:
        type: string
        default: $STAGE_CF_ID
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - aws-cli/setup:
          aws-access-key-id: << parameters.access-key >>
          aws-secret-access-key: << parameters.secret-key >>
          aws-region: AWS_REGION
          version: "2"
      - run:
          name: Deploy to S3
          command: aws s3 sync /tmp/workspace/build/ s3://<< parameters.s3-bucket >>
      - run:
          name: Run CF invalidation
          command: aws cloudfront create-invalidation --distribution-id << parameters.cf-id >> --paths '/*'

workflows:
  pullrequests:
    jobs:
      - build:
          filters:
            branches:
              ignore: /master/
  stage:
    jobs:
      - build:
          filters:
            branches:
              only: /master/
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: /master/

  prod:
    jobs:
      - build:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)+/
            branches:
              ignore: /.*/
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)+/
            branches:
              ignore: /.*/
          cf-id: $PROD_CF_ID
          s3-bucket: $PROD_S3_URL
          access-key: PROD_ACCESS_KEY_ID
          secret-key: PROD_SECRET_ACCESS_KEY
